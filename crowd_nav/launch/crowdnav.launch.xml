<launch>

  <arg name="lang" default="PYTHON" description="Choose whether python or C++ BRNE nodes are launched. options: PYTHON, C++"/>
  <arg name="sim_odom" default="true" description="Simulate cmd_vel->odom update"/>
  <arg name="launch_zed" default="false" description="Launch the zed camera node"/>
  <arg name="sim_ped" default="true" description="Simulate a static pedestrian"/>
  <arg name="debug_level" default="info" description="Choose the debug level for the BRNE node"/>

  <!-- Python algorithm node -->
  <node pkg="brne_py" exec="brne_nav" if="$(eval '\'$(var lang)\' == \'PYTHON\'')" 
        args="--ros-args --log-level brne_nav:=$(var debug_level)">
  </node>

  <!-- C++ algorithm nodes -->
  <node pkg="crowd_nav" exec="path_plan" if="$(eval '\'$(var lang)\' == \'C++\'')">
  </node>
  <node pkg="crowd_nav" exec="controller" if="$(eval '\'$(var lang)\' == \'C++\'')">
  </node>

  <!-- perception nodes -->
  <include file="$(find-pkg-share pedestrian_tracking)/launch/perception.launch.xml">
      <arg name="launch_zed" value="$(var launch_zed)"/>
      <arg name="simulate" value="$(var sim_ped)"/>
    </include>

  <!-- simulate cmd_vel to odom updates -->
  <node pkg="crowd_nav" exec="sim_robot" if="$(eval '\'$(var sim_odom)\' == \'true\'')">
  </node>
  <!-- if we are simulating odom, we also need to add a dummy map frame for tf continuity -->
  <node pkg="tf2_ros" exec="static_transform_publisher" 
        args="0 0 0 1 0 0 0 'map' 'odom'" 
        if="$(eval '\'$(var sim_odom)\' == \'true\'')">
  </node>

   <!-- Service to publish goal pose -->
  <node pkg="crowd_nav" exec="pub_goal">
  </node>

  <!-- launch visualizations -->
  <node pkg="rviz2" exec="rviz2" args="-d $(find-pkg-share crowd_nav)/config/crowdnav.rviz"/>

</launch>
